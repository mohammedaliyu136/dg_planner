# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2018-10-28 19:58
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collections_r',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('department', models.CharField(max_length=150)),
                ('departmentAbbr', models.CharField(max_length=5)),
                ('courseNumber', models.CharField(max_length=3)),
                ('courseDescription', models.TextField()),
                ('credits', models.IntegerField()),
                ('catalogYear', models.DateField()),
                ('corequisites', models.ManyToManyField(blank=True, related_name='prereqField', to='planner.Course')),
                ('prerequisites', models.ManyToManyField(blank=True, related_name='coreqField', to='planner.Course')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='CourseCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('numReq', models.IntegerField()),
                ('catalogYear', models.DateField()),
                ('isCompleted', models.BooleanField(verbose_name=False)),
                ('courses', models.ManyToManyField(blank=True, related_name='courses', to='planner.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Gened_collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('is_group', models.BooleanField()),
                ('courses', models.ManyToManyField(blank=True, related_name='Gened_collection_courses', to='planner.Course')),
                ('group_courses', models.ManyToManyField(blank=True, related_name='group_collection_courses', to='planner.Collections_r')),
            ],
        ),
        migrations.CreateModel(
            name='Gened_r',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('numReq', models.IntegerField()),
                ('catalogYear', models.DateField()),
                ('isCompleted', models.BooleanField(verbose_name=False)),
                ('courses', models.ManyToManyField(blank=True, related_name='gened_courses', to='planner.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Gened_rr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('creadits', models.CharField(max_length=150)),
                ('course_group_1', models.ManyToManyField(blank=True, related_name='course_group_1', to='planner.Gened_collection')),
                ('course_group_2', models.ManyToManyField(blank=True, related_name='course_group_2', to='planner.Gened_collection')),
                ('course_group_3', models.ManyToManyField(blank=True, related_name='course_group_3', to='planner.Gened_collection')),
            ],
        ),
        migrations.CreateModel(
            name='Major_r',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('numReq', models.IntegerField()),
                ('catalogYear', models.DateField()),
                ('isCompleted', models.BooleanField(verbose_name=False)),
                ('courses', models.ManyToManyField(blank=True, related_name='major_courses', to='planner.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Minor_r',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('numReq', models.IntegerField()),
                ('catalogYear', models.DateField()),
                ('isCompleted', models.BooleanField(verbose_name=False)),
                ('courses', models.ManyToManyField(blank=True, related_name='minor_courses', to='planner.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Plans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=150)),
                ('major', models.CharField(max_length=25)),
                ('completedCourses', models.ManyToManyField(blank=True, related_name='completed_courses_set', to='planner.Course')),
                ('courses', models.ManyToManyField(blank=True, related_name='courses_set', to='planner.Course')),
                ('notCompletedCourses', models.ManyToManyField(blank=True, related_name='not_completed_courses_set', to='planner.Course')),
                ('option_1', models.ManyToManyField(blank=True, related_name='option_1_set', to='planner.Course')),
                ('option_2', models.ManyToManyField(blank=True, related_name='option_2_set', to='planner.Course')),
                ('semester_1', models.ManyToManyField(blank=True, related_name='semester_1_set', to='planner.Course')),
                ('semester_2', models.ManyToManyField(blank=True, related_name='semester_2_set', to='planner.Course')),
            ],
            options={
                'ordering': ('user_name',),
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=150)),
                ('major', models.CharField(default=b'not set', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('catalogYear', models.DateField()),
                ('isCompleted', models.BooleanField(verbose_name=False)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Program_r',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('numReq', models.IntegerField()),
                ('catalogYear', models.DateField()),
                ('isCompleted', models.BooleanField(verbose_name=False)),
                ('gened', models.ManyToManyField(blank=True, related_name='gened_r_courses', to='planner.Gened_r')),
                ('major', models.ManyToManyField(blank=True, related_name='major_r_courses', to='planner.Major_r')),
            ],
        ),
        migrations.CreateModel(
            name='Specialization_r',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('numReq', models.IntegerField()),
                ('catalogYear', models.DateField()),
                ('isCompleted', models.BooleanField(verbose_name=False)),
                ('courses', models.ManyToManyField(blank=True, related_name='specialization_courses', to='planner.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Trajectory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('isPublic', models.BooleanField()),
                ('semester', models.IntegerField()),
                ('completedCourses', models.ManyToManyField(to='planner.Trajectory')),
                ('courses', models.ManyToManyField(to='planner.Course')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name_plural': 'trajectories',
            },
        ),
        migrations.CreateModel(
            name='GenEd',
            fields=[
                ('program_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='planner.Program')),
            ],
            bases=('planner.program',),
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('program_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='planner.Program')),
                ('degreeType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='planner.GenEd')),
            ],
            bases=('planner.program',),
        ),
        migrations.CreateModel(
            name='Minor',
            fields=[
                ('program_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='planner.Program')),
            ],
            bases=('planner.program',),
        ),
        migrations.AddField(
            model_name='trajectory',
            name='whichPrograms',
            field=models.ManyToManyField(to='planner.Program'),
        ),
        migrations.AddField(
            model_name='program_r',
            name='specialization',
            field=models.ManyToManyField(blank=True, related_name='specialization_r_courses', to='planner.Specialization_r'),
        ),
        migrations.AddField(
            model_name='program',
            name='courseReqs',
            field=models.ManyToManyField(blank=True, related_name='courseCollections', to='planner.CourseCollection'),
        ),
        migrations.AddField(
            model_name='major_r',
            name='specialization',
            field=models.ManyToManyField(blank=True, related_name='specialization', to='planner.Specialization_r'),
        ),
        migrations.AddField(
            model_name='collections_r',
            name='course',
            field=models.ManyToManyField(blank=True, related_name='collection_courses', to='planner.Course'),
        ),
    ]
